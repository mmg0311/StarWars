{"version":3,"sources":["Component/Dashboard/dashboard.js","App.js","serviceWorker.js","Containers/Character.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","backgroundColor","alignItems","PermanentDrawerLeft","props","classes","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","sortTypes","up","fn","a","b","height","down","default","az","name","toLowerCase","za","App","getCharacter","i","async","people","state","filtered_value","axios","get","res","data","homeworld","r","push","setState","emptyRows","rowsPerPage","Math","min","length","page","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleClick1","index","v","url","slice","substr","indexOf","window","open","onSortChangeName","nextSort","currentSort","onSortChangeHeight","handleChange","filtered","filter","e","includes","function","this","loadGroupsFromQuery","console","log","ids","Array","from","k","Promise","all","map","id","Fragment","component","Paper","root1","form","noValidate","autoComplete","style","padding","TextField","label","marginLeft","onChange","Table","TableHead","background","TableRow","TableCell","align","tablecell","onClick","icon","TableBody","sort","s","key","tableRow","hover","scope","gender","birth_year","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","SelectProps","inputProps","native","onChangePage","onChangeRowsPerPage","React","Component","withStyles","palette","type","width","marginTop","spacing","borderStyle","margin","table","minWidth","cursor","color","Boolean","location","hostname","match","Character","handleExpandClick","expanded","params","queryString","parse","search","ind","getData","Axios","then","response","catch","error","undefined","Card","card","CardContent","CardHeader","avatar","Avatar","aria-label","title","subheader","pos","mass","hair_color","eye_color","skin_color","fontSize","marginBottom","red","ReactDOM","render","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4f7fa37.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor:\"#4C3154 \",\r\n    alignItems:\"center\",\r\n  },\r\n}));\r\n\r\nfunction PermanentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar >\r\n          <Typography variant=\"h5\" noWrap >\r\n            {/* <div className=\"col-lg-1\">\r\n             <img src=\"/star.jpg\" alt=\"star wars\" height=\"60\" width=\"100\"></img>\r\n            </div> */}\r\n            STAR WARS\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PermanentDrawerLeft;","import React from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from 'axios';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Dashboard from './Component/Dashboard/dashboard';\nimport { Route } from \"react-router-dom\";\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  palette: {\n    type: \"dark\"\n  },\n  root: {\n    width: \"70%\",\n    marginTop: theme.spacing(10),\n    borderStyle: 'solid',\n    margin: \"auto\",\n    background: '#2B413C ',\n  },\n  root1: {\n    width: \"40%\",\n    marginTop: theme.spacing(10),\n    borderStyle: 'solid',\n    margin: \"auto\",\n    background: '#2B413C ',\n  },\n  table: {\n    margin: \"auto\",\n    minWidth: 500,\n  },\n  tableRow: {\n\n    cursor: \"pointer\",\n\n  },\n  tablecell: {\n    color: \"#FDF9FE \"\n  },\n  icon: {\n    color: \"#FDF9FE\",\n\n  },\n  form: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n    \n  },\n});\n\n\n\nconst sortTypes = {\n  up: {\n    fn: (a, b) => ((a.height - b.height))\n  },\n  down: {\n    fn: (a, b) => ((b.height - a.height))\n  },\n  default: {\n    fn: (a, b) => a\n  },\n  az:{\n    fn: (a, b) => {\n      if (a.name.toLowerCase() === b.name.toLowerCase()) {\n        return 0;\n      }\n      if (a.name.toLowerCase() > b.name.toLowerCase()) {\n        return 1;\n      }\n      return -1;\n    }\n  },\n  za:{\n    fn: (a, b) => {\n      if (b.name.toLowerCase() === a.name.toLowerCase()) {\n        return 0;\n      }\n      if (b.name.toLowerCase() > a.name.toLowerCase()) {\n        return 1;\n      }\n      return -1;\n    }\n  },\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [],\n      filtered_value:[],\n    };\n    this.page = 0;\n    this.rowsPerPage = 5;\n    this.emptyRows = 0;\n    this.currentSort = 'default';\n  }\n\n  getCharacter = async i => {\n    let { people } = this.state;\n    let {filtered_value} = this.state;\n    let res = await axios.get(`https://swapi.co/api/people/${i}/`);\n    let r = await axios.get(res.data.homeworld);\n    res.data.homeworld = r.data.name;\n    people.push(res.data);\n    filtered_value.push(res.data);\n    this.setState({ people,filtered_value });\n    this.emptyRows = this.rowsPerPage - Math.min(this.rowsPerPage, this.state.people.length - this.page * this.rowsPerPage);\n    return res;\n  };\n\n  componentDidMount() {\n    let ids = Array.from({ length: 10 }, (v, k) => k + 1)\n    Promise.all(ids.map(id => this.getCharacter(id)))\n  }\n  handleChangePage = (event, newPage) => {\n    this.page = newPage;\n    this.setState({ ...this.state });\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.rowsPerPage = parseInt(event.target.value, 10);\n    this.page = 0;\n    this.setState({ ...this.state });\n  }\n\n  handleClick1 = index => event => {\n    let i;\n    index = this.page * this.rowsPerPage + index;\n    let v = this.state.people[index].url.slice(28);\n    i = v.substr(0, v.indexOf('/'));\n    return (window.open(\n      \"http://localhost:3000/characters?ind=\" + i,\n      \"_blank\"\n    ));\n\n  }\n  onSortChangeName = () => {\n    let nextSort;\n    if (this.currentSort === 'az') nextSort = 'za';\n    else if (this.currentSort === 'za') nextSort = 'default';\n    else if (this.currentSort === 'default') nextSort = 'az';\n    else nextSort='za';\n    this.currentSort = nextSort;\n    this.setState({\n      ...this.state,\n    });\n  };\n  onSortChangeHeight = () => {\n    let nextSort;\n    if (this.currentSort === 'down') nextSort = 'up';\n    else if (this.currentSort === 'up') nextSort = 'default';\n    else if (this.currentSort === 'default') nextSort = 'down';\n    else nextSort = 'down';\n    this.currentSort =  nextSort;\n    this.setState({\n      ...this.state,\n    });\n  };\n\n  handleChange = (event) =>{\n    let { filtered_value } = this.state;\n    let a = event.target.value;\n    if(a.length === 0){\n      filtered_value.push([...this.state.people]);\n      this.setState({\n        filtered_value,\n        ...this.state\n      })\n      return;\n    }\n   \n    filtered_value.length = 0;\n    let filtered = this.state.people.filter(e=>e.name.includes(a) || e.homeworld.includes(a));\n\n    filtered_value.push([...filtered]);\n    this.setState({\n      filtered_value,\n      ...this.state, function() {\n        this.loadGroupsFromQuery();}\n    })\n     console.log(this.state.filtered_value);\n  }\n  render() {\n    const { classes } = this.props;\n \n    return (\n      <React.Fragment >\n        <div>\n          <Route\n            component={() => (\n              <Dashboard >\n              </Dashboard>\n            )}\n          />\n        </div>\n        <br /><br />\n        <Paper className={classes.root1}>\n          <form className={classes.form} noValidate autoComplete=\"off\"  style={{padding:\"2%\"}}>\n            <TextField id=\"standard-basic\" label=\"Search\" style={{marginLeft:\"35%\"}} onChange={ this.handleChange }/>\n          </form>\n        </Paper>\n        <Paper className={classes.root}>\n          <Table className=\"table  \">\n            <TableHead style={{ background: '#3D3340' }} >\n              <TableRow>\n                <TableCell align=\"center\" className={classes.tablecell}>\n                  Name\n                  {\n                    this.currentSort === 'default' || this.currentSort === 'up' || this.currentSort === 'down'? <AutorenewIcon onClick={this.onSortChangeName} className={classes.icon} /> : (this.currentSort === 'az' ?\n                      <KeyboardArrowDownIcon onClick={this.onSortChangeName} className={classes.icon} /> :\n                      <KeyboardArrowUpIcon onClick={this.onSortChangeName} className={classes.icon} />)\n                  }\n                </TableCell>\n                <TableCell align=\"center\" className={classes.tablecell}>Gender</TableCell>\n                <TableCell align=\"center\" className={classes.tablecell}>\n                  Height\n                  {\n                    this.currentSort === 'default' || this.currentSort === 'za' || this.currentSort === 'az'? <AutorenewIcon onClick={this.onSortChangeHeight} className={classes.icon} /> : (this.currentSort === 'down' ?\n                      <KeyboardArrowDownIcon onClick={this.onSortChangeHeight} className={classes.icon} /> :\n                      <KeyboardArrowUpIcon onClick={this.onSortChangeHeight} className={classes.icon} />)\n                  }\n                </TableCell>\n                <TableCell align=\"center\" className={classes.tablecell}>Home World</TableCell>\n                <TableCell align=\"center\" className={classes.tablecell}>Birth Year</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody >\n              {(this.rowsPerPage > 0 ? [...this.state.people].sort(sortTypes[this.currentSort].fn).slice(this.page * this.rowsPerPage, this.page * this.rowsPerPage + this.rowsPerPage) : this.state.people).map((s, index) => (\n                <TableRow key={index} className={classes.tableRow} hover={true} onClick={this.handleClick1(index)}>\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\" className={classes.tablecell}>\n                    {s.name}\n                  </TableCell>\n                  <TableCell align=\"center\" className={classes.tablecell}>{s.gender}</TableCell>\n                  <TableCell align=\"center\" className={classes.tablecell}>{s.height}</TableCell>\n                  <TableCell align=\"center\" className={classes.tablecell}>{s.homeworld}</TableCell>\n                  <TableCell align=\"center\" className={classes.tablecell}>{s.birth_year}</TableCell>\n                </TableRow>\n              ))}\n\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                  colSpan={3}\n                  count={this.state.people.length}\n                  rowsPerPage={this.rowsPerPage}\n                  page={this.page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </Paper>\n      </React.Fragment>\n    );\n  }\n}\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport queryString from 'query-string';\r\nimport Axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { red } from '@material-ui/core/colors';\r\nconst styles = theme => ({\r\n    card: {\r\n        width: \"40%\",\r\n        height: \"60%\",\r\n        margin: \"10%\",\r\n        minWidth: 275,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 20,\r\n        align: \"center\"\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n});\r\n\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.params = queryString.parse(this.props.location.search).ind;\r\n        this.state = {}\r\n        this.getData();\r\n        this.expanded = false;\r\n    }\r\n    getData() {\r\n        Axios.get(`https://swapi.co/api/people/${this.params}/`)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    ...response.data\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n     handleExpandClick = () => {\r\n        this.expanded = !this.expanded;\r\n        this.setState({...this.state});\r\n      };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.name === undefined ? <div></div> :\r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                        {this.state.name.substr(0, 1)}\r\n                                    </Avatar>\r\n                                }\r\n                                title={this.state.name}\r\n                                subheader={this.state.birth_year}\r\n                            />\r\n                            <Typography color=\"textSecondary\">\r\n                                Height : {this.state.height}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                Mass : {this.state.mass}\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">\r\n                                Hair Color : {this.state.hair_color}\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">\r\n                                Eye Color : {this.state.eye_color}\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">\r\n                                Skin Color : {this.state.skin_color}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Character);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Character from \"./Containers/Character\"\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\n\nReactDOM.render( <BrowserRouter><Switch>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/characters\" component={Character} />\n  </Switch></BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}